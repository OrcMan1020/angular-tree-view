angular.module("TreeView",["RecursionHelper"]).directive("treeViewItem",["RecursionHelper",function(e){return{replace:!0,templateUrl:"angular-tree-view-item.tpl",controller:["$scope","$attrs",function(e,t){e.$watch(function(){return e.$eval(t.datas)},function(t){e.datas=t})}],compile:function(t){return e.compile(t)}}}]),angular.module("TreeView").directive("treeView",["RecursionHelper","$q","$filter",function(e,t,n){var r={filter:n("filter")};return{templateUrl:"angular-tree-view.tpl",scope:{outputAllInfo:"=",datas:"=inputModel",ngModel:"=",filterModel:"=",multipleSelect:"=",recursionCheck:"=",recursionExpand:"=",outputDuplicate:"=",singleMode:"=",outputType:"=",options:"=",transferData:"="},controller:["$scope","$element","$attrs",function(e,n,a){var i=0,l=1,o=0;e.options=e.options||{},e.displayProperty=e.options.displayProperty||"text",e.valueProperty=e.options.valueProperty||"id",e.childrenProperty=e.options.childrenProperty||"children",e.iconLeaf=e.options.iconLeaf||"glyphicon glyphicon-file fa fa-file",e.iconExpand=e.options.iconExpand||"glyphicon glyphicon-minus fa fa-minus",e.iconCollapse=e.options.iconCollapse||"glyphicon glyphicon-plus fa fa-plus";var c={arrayMinus:function(e,t){e=e||[],t=t||[];for(var n=[],r=0;r<e.length;r++)-1===this.find(t,e[r])&&n.push(e[r]);return n},find:function(t,n){if(angular.isObject(n)){for(var r=0;r<t.length;r++)if(n.body[e.valueProperty]===t[r].body[e.valueProperty])return r;return-1}return t.indexOf(n)}},p={status:"pending",init:function(){var t=this;n.addClass("tree-view"),this.bindEvents(),this.initDatas().then(function(n){e.showDatas=e.transferData?n:angular.copy(n);var r=t.createHelpers(e.showDatas);e.helperObject=r.obj,a.filterModel&&(e.helperArray=r.arr),t.updateHelperByInput(),t.status="success"})},initDatas:function(){var n=t.defer();return angular.isDefined(e.datas)&&angular.isFunction(e.datas.then)?e.datas.then(function(e){n.resolve(e.data)}):n.resolve(e.datas),n.promise},updateHelperByInput:function(t,n){var r=this;t?(n.forEach(function(t){r.changeStateById(angular.isObject(t)?t.body[e.valueProperty]:t,!1,!0)}),t.forEach(function(t){r.changeStateById(angular.isObject(t)?t.body[e.valueProperty]:t,!0,!0)})):angular.forEach(e.ngModel,function(t){r.changeStateById(angular.isObject(t)?t.body[e.valueProperty]:t,!0,!0)}),r.updateModelByCheck(!0)},changeStateById:function(t,n,r){e.helperObject[t].checked=n,e.recursionCheck&&this.calculateChecked(e.helperObject[t].body),n&&e.recursionExpand&&this.expandUp(t),!n&&e.recursionExpand&&r&&this.collapseDown(t)},updateModelByCheck:function(t){o=l;var n=[];angular.forEach(e.helperObject,function(t){t.checked&&n.push(e.outputAllInfo?t:t.body[e.valueProperty])}),e.outputDuplicate||(n=this.deleteDuplicated(n)),0===n.length?(!t||e.ngModel&&e.ngModel.length||l++,e.ngModel=void 0):(t&&e.ngModel&&e.ngModel.length===n.length&&l++,e.ngModel=e.singleMode?n[0]:n)},changeStateByModelChange:function(t,n){if(t===n&&angular.isUndefined(t)||"success"!==this.status||o===l)return void l++;if(l++,e.singleMode)angular.isDefined(t)?this.changeStateById(angular.isObject(t)?t.body[e.valueProperty]:t,!0,!0):this.changeStateById(angular.isObject(n)?n.body[e.valueProperty]:n,!1,!0);else{var r=c.arrayMinus(n,t),a=c.arrayMinus(t,n);this.updateHelperByInput(a,r)}},bindEvents:function(){var t=this;e.singleMode?e.$watch("ngModel",function(e,n){t.changeStateByModelChange(e,n)}):e.$watchCollection("ngModel",function(e,n){t.changeStateByModelChange(e,n)}),e.$watch("filterModel",function(n,a){if(n!==a&&"success"===t.status){angular.forEach(e.helperObject,function(e,t){e.filtered=!1});var i=r.filter(e.helperArray,{text:n});i.forEach(function(e){t.getHelper(e.id).filtered=!0,t.filtUp(e.id),t.expandUp(e.id)})}})},filtUp:function(e){var t=this.getHelper(e);if(t.parent){var n=this.getParentId(e);this.getHelper(n).filtered=!0,this.filtUp(n)}},expandUp:function(e){var t=this.getHelper(e);t.parent&&(this.getHelper(t.parent).expanded=!0,this.expandUp(this.getParentId(e)))},collapseDown:function(t){var n=this.getHelper(t);if(n.expanded=!1,n.children)for(var r=0;r<n.children.length;r++)this.collapseDown(n.children[r][e.valueProperty])},deleteDuplicated:function(t){for(var n=[],r=0;r<t.length;r++){var a=angular.isObject(t[r])?t[r].body[e.valueProperty]:t[r],i=this.getParentId(a),l=i;e.outputAllInfo&&(l={body:{}},l.body[e.valueProperty]=i),angular.isDefined(i)&&-1!==c.find(t,l)&&n.push(t[r])}return c.arrayMinus(t,n)},initCheck:function(){angular.forEach(e.helperObject,function(e){e.checked=!1})},calculateChecked:function(e){var t=this.getHelper(e);this.calculateDown(t),this.calculateUp(t)},calculateDown:function(e){if(e.children)for(var t=0;t<e.children.length;t++)this.getHelper(e.children[t]).checked=e.checked,this.calculateDown(this.getHelper(e.children[t]))},calculateUp:function(e){if(e.parent){for(var t=0,n=0;n<e.parent.children.length;n++)this.getHelper(e.parent.children[n]).checked&&t++;this.getHelper(e.parent).checked=t===e.parent.children.length,this.calculateUp(this.getHelper(e.parent))}},getParentId:function(t){var n=this.getHelper(t);return n.parent?this.getHelper(n.parent).body[e.valueProperty]:!1},getHelper:function(t){var n=t;return angular.isObject(t)&&(n=t[e.valueProperty]),e.helperObject[n]},createHelpers:function(t){function n(t,o){if(angular.isArray(t))for(var c=0;c<t.length;c++)t[c].hasOwnProperty(e.valueProperty)||(t[c][e.valueProperty]=i++),r[t[c][e.valueProperty]]={body:t[c],parent:o,children:t[c][e.childrenProperty]},a.filterModel&&l.push({text:t[c][e.displayProperty],id:t[c][e.valueProperty]}),t[c][e.childrenProperty]&&t[c][e.childrenProperty].length&&n(t[c][e.childrenProperty],t[c])}var r={},l=[];return n(t),{obj:r,arr:l}}};e.getIcon=function(t){return t[e.childrenProperty]&&t[e.childrenProperty].length?e.helperObject[t[e.valueProperty]].expanded===!0?e.iconExpand:e.iconCollapse:e.iconLeaf},e.toggleExpanded=function(t,n){e.helperObject[t[e.valueProperty]].expanded=!e.isExpanded(t),n.stopPropagation()},e.isExpanded=function(t){return e.helperObject[t[e.valueProperty]].expanded},e.isChecked=function(t){return e.helperObject[t[e.valueProperty]].checked},e.toggleChecked=function(t){var n=e.isChecked(t);e.singleMode&&p.initCheck(),e.helperObject[t[e.valueProperty]].checked=!n,e.recursionCheck&&p.calculateChecked(t),p.updateModelByCheck()},e.isFiltered=function(e){return p.getHelper(e).filtered!==!1},p.init()}]}}]),function(){"use strict";angular.module("TreeView").run(["$templateCache",function(e){e.put("angular-tree-view-item.tpl",'<ul class="tree-view-group">\n    <li ng-repeat="data in datas" ng-class="{expanded: isExpanded(data)}" ng-show="isFiltered(data)">\n        <a ng-class="{checked: isChecked(data)}" ng-click="toggleChecked(data, $event)">\n            <span ng-class="getIcon(data)" ng-click="toggleExpanded(data, $event)"></span>\n            {{ data[displayProperty] }}\n        </a>\n        <tree-view-item\n        ng-if="data[childrenProperty]"\n        datas="data[childrenProperty]"\n        ></tree-view-item>\n    </li>\n</ul>'),e.put("angular-tree-view.tpl",'<tree-view-item \n    datas="showDatas" \n    value-property="{{ valueProperty }}"\n    display-property="{{ displayProperty }}"\n    icon-leaf="{{ iconLeaf }}"\n    icon-expand="{{ iconExpand }}"\n    icon-collapse="{{ iconCollapse }}"\n    helper-object="helperObject"\n    ></tree-view-item>')}])}();