angular.module("TreeView",[]).provider("treeViewConfig",function(){var e=this;this.options={iconLeaf:"fa fa-file glyphicon glyphicon-file",iconExpand:"fa fa-minus glyphicon glyphicon-minus",iconCollapse:"fa fa-plus glyphicon glyphicon-plus",template:['<ul class="tree-view-group">','<li ng-repeat="data in data[children]"','ng-class="{expanded: isExpanded(data)}"','ng-if="!filterModel || isFiltered(data)">','<span class="tree-icon" ng-class="getExpandIcon(data)" ng-click="toggleExpanded(data, $event)"></span>','<a ng-class="{checked: isChecked(data), indetermine: !isChecked(data) && childrenChecked(data)}"','ng-click="toggleChecked(data, $event)">',"{{ data[displayProperty] }}","</a>","<tree-view-item",'ng-if="data[children] && isExpanded(data)"',"></tree-view-item>","</li>","</ul>"].join(" ")},this.$get=function(){return e.options}}).directive("treeViewItem",function(){return{require:"^treeView",link:function(e,t,i,n){n.template(e,function(e){t.empty().append(e)})}}}).directive("treeView",["$q","treeViewConfig",function(e,t){return{scope:{outputAllInfo:"=",datas:"=inputModel",ngModel:"=",filterModel:"=",recursionCheck:"=",recursionExpand:"=",outputDuplicate:"=",singleMode:"=",options:"=",transferData:"=",hashObject:"="},link:function(e,t,i,n,a){n.template(e,function(e){t.empty().append(e)}),e.$treeTransclude=a},controller:["$scope","$element","$attrs","$compile",function(e,i,n,a){var r=0;e.options=e.options||{},e.displayProperty=e.options.displayProperty||"text",e.valueProperty=e.options.valueProperty||"id",e.children=e.options.childrenProperty||"children",e.iconLeaf=e.options.iconLeaf||t.iconLeaf,e.iconExpand=e.options.iconExpand||t.iconExpand,e.iconCollapse=e.options.iconCollapse||t.iconCollapse,e.iconCheck=e.options.iconCheck||t.iconCheck,e.iconUnCheck=e.options.iconUnCheck||t.iconUnCheck,this.template=a(t.template);var l={arrayMinus:function(e,t){e=e||[],t=t||[];for(var i=[],n=0;n<e.length;n++)-1===this.find(t,e[n])&&i.push(e[n]);return i},find:function(t,i){if(angular.isObject(i)){for(var n=0;n<t.length;n++)if(i[e.valueProperty]===t[n][e.valueProperty])return n;return-1}return t.indexOf(i)},shallowMinus:function(e,t){for(var i=0;i<e.length;i++)-1!==t.indexOf(e[i])&&(e.splice(i,1),i--)}},o={modelInited:!1,inited:!1,init:function(t){i.addClass("tree-view"),this.transformDataToTree(t),e.data={},e.data[e.children]=t,this.inited||this.bindEvents(),this.inited=!0,this.modelInited=!1},unwrap:function(t){for(var i=0;i<t.length;i++)t[i]=t[i][e.valueProperty]},updateModelByCheck:function(t,i,n){e.outputAllInfo||this.unwrap(t),i===!0?(e.ngModel=e.ngModel||[],Array.prototype.push.apply(e.ngModel,t)):l.shallowMinus(e.ngModel,t),e.outputDuplicate||(i===!0&&this.deleteDuplicated(e.ngModel),i===!1&&this.fillResult(e.ngModel,t))},fillResult:function(t,i){for(var n,a=[],r=0;r<i.length;r++){var l=this.getParentItem(i[r]);-1!==i.indexOf(l)&&(-1===a.indexOf(l)&&a.push(l),n=i[r],a.push(i[r]))}if(a.length){var o=e.outputAllInfo?n.$treeView.parentData:this.hashObject[n].$treeView.parentData;if(!(a.length>=o[e.children].length)){var c=e.outputAllInfo?n:this.hashObject[n],h=[].concat(o[e.children]);h.splice(h.indexOf(c),1),e.outputAllInfo||this.unwrap(h),Array.prototype.push.apply(t,h)}}},deleteDuplicated:function(t){for(var i=0;i<t.length;i++){var n;e.outputAllInfo?n=t[i].$treeView.parentData:(n=this.hashObject[t[i]].$treeView.parentData,n=n&&n[e.valueProperty]),-1!==t.indexOf(n)&&(t.splice(i,1),i--)}},updateStateByModelChange:function(t,i){var n;this.modelInited?n=l.arrayMinus(t,i):(n=t,this.modelInited=!0);for(var a=l.arrayMinus(i,t),r=0;r<n.length;r++){var o=e.outputAllInfo?n[r]:this.hashObject[n[r]];o.$treeView.isChecked=!0,this.expandUp(o)}for(r=0;r<a.length;r++)o=e.outputAllInfo?a[r]:this.hashObject[a[r]],!e.outputDuplicate&&o.$treeView.parentData&&o.$treeView.parentData.$treeView.isChecked||(o.$treeView.isChecked=!1,e.outputDuplicate||t.length&&(1!==a.length||n.length)||this.calculateDown(o));e.outputDuplicate||t.length!==this.currentLength||this.deleteDuplicated(e.ngModel)},expandUp:function(e){var t=e.$treeView.parentData;t&&!t.$treeView.isExpanded&&(t.$treeView.isChecked?this.expandUp(t):(t.$treeView.isExpanded=!0,this.expandUp(t)))},getParentItem:function(t){var i;return e.outputAllInfo?i=t.$treeView.parentData:(i=this.hashObject[t].$treeView.parentData,i=i&&i[e.valueProperty]),i},calculateChecked:function(e,t){this.calculateDown(e,t),this.calculateUp(e,t)},calculateDown:function(t,i){if(t[e.children])for(var n=0;n<t[e.children].length;n++)t[e.children][n].$treeView.isChecked!==t.$treeView.isChecked&&(i&&i.push(t.children[n]),t.children[n].$treeView.isChecked=t.$treeView.isChecked,this.calculateDown(t.children[n]))},calculateUp:function(e,t){if(e.$treeView.parentData&&e.$treeView.parentData.$treeView.isChecked!==e.$treeView.isChecked){for(var i=!!e.$treeView.parentData.$treeView.isChecked,n=0,a=0;a<e.$treeView.parentData.children.length;a++)e.$treeView.parentData.children[a].$treeView.isChecked&&n++;e.$treeView.parentData.$treeView.isChecked=n===a,e.$treeView.parentData.$treeView.isChecked!==i&&(t&&t.push(e.$treeView.parentData),this.calculateUp(e.$treeView.parentData))}},hashObject:{},currentLength:0,transformDataToTree:function(t){var i=[];this.hashObject={};for(var a=0;a<t.length;a++)t[a].$treeView=t[a].$treeView||{},e.valueProperty in t[a]||(t[a][e.valueProperty]=r++),this.currentLength++,this.hashObject[t[a][e.valueProperty]]=t[a],i.push(t[a]);for(;i.length;){var l=i.pop();if(l[e.children]&&l[e.children].length)for(a=0;a<l[e.children].length;a++){var o=l[e.children][a];o.$treeView=o.$treeView||{},o.$treeView.parentData=l,e.valueProperty in o||(o[e.valueProperty]=r++),this.currentLength++,this.hashObject[o[e.valueProperty]]=o,i.push(o)}}n.hashObject&&(e.hashObject=this.hashObject)},bindEvents:function(){var t=this;e.singleMode?e.$watch("ngModel",function(e,i){t.updateStateByModelChange(e,i)}):e.$watchCollection("ngModel",function(e,i){e=e||[],i=i||[],t.updateStateByModelChange(e,i)}),e.$watch("filterModel",function(i,n){if(i){var a=[];angular.forEach(t.hashObject,function(t,n){-1!==t[e.displayProperty].toString().indexOf(i)?a.push(t):t.$treeView.isFiltered=!1});for(var r=0;r<a.length;r++)a[r].$treeView.isFiltered=!0,t.filtUp(a[r]),t.expandUp(a[r])}})},filtUp:function(e){e.$treeView.parentData&&!e.$treeView.parentData.isFiltered&&(e.$treeView.parentData.isFiltered=!0,this.filtUp(e.$treeView.parentData))}};e.getExpandIcon=function(t){return t[e.children]&&t[e.children].length?t.$treeView.isExpanded?e.iconExpand:e.iconCollapse:e.iconLeaf},e.toggleExpanded=function(e,t){e.$treeView.isExpanded=!e.$treeView.isExpanded,t.stopPropagation()},e.isExpanded=function(e){return!!e.$treeView.isExpanded},e.isChecked=function(e){return!!e.$treeView.isChecked},e.childrenChecked=function(t){if(!t[e.children]||!t[e.children].length)return!1;for(var i=[],n=t[e.children],a=0;a<n.length;a++){if(n[a].$treeView.isChecked)return!0;i.push(n[a])}for(;i.length;){var r=i.pop();if(r.children&&r.children.length)for(a=0;a<r.children.length;a++){if(r.children[a].$treeView.isChecked)return!0;i.push(r.children[a])}}return!1},e.toggleChecked=function(t){var i=e.isChecked(t),n=[t];e.singleMode&&o.initCheck(),t.$treeView.isChecked=!i,e.recursionCheck&&o.calculateChecked(t,n),o.updateModelByCheck(n,t.$treeView.isChecked,!1)},e.isFiltered=function(e){return!!e.$treeView.isFiltered},e.$watch("datas",function(e,t){angular.isDefined(e)&&o.init(e)})}]}}]);